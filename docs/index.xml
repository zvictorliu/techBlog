<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech Blog</title>
    <link>https://zvictorliu.github.io/techBlog/</link>
    <description>Recent content on Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 04 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://zvictorliu.github.io/techBlog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Get start</title>
      <link>https://zvictorliu.github.io/techBlog/docs/getting-started/</link>
      <pubDate>Mon, 24 Jan 2022 14:00:00 +0000</pubDate>
      
      <guid>https://zvictorliu.github.io/techBlog/docs/getting-started/</guid>
      <description>&lt;p&gt;Welcome to the Mainroad theme documentation. This quick start guide covers Mainroad theme installation and minimal
configuration and is intended for intermediate to advanced users. To understand this guide, you need to be familiar
with the &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; static site generator.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Customization</title>
      <link>https://zvictorliu.github.io/techBlog/docs/customization/</link>
      <pubDate>Mon, 24 Jan 2022 14:00:00 +0000</pubDate>
      
      <guid>https://zvictorliu.github.io/techBlog/docs/customization/</guid>
      <description>&lt;p&gt;Customization page describes common Mainroad configuration parameters which can be specified via configuration file or
via Front Matter section. That includes logo section tuning, adding a sidebar with widgets, adjusting highlight color,
and more.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Frequently asked questions (FAQ)</title>
      <link>https://zvictorliu.github.io/techBlog/docs/faq/</link>
      <pubDate>Mon, 24 Jan 2022 14:00:00 +0000</pubDate>
      
      <guid>https://zvictorliu.github.io/techBlog/docs/faq/</guid>
      <description>&lt;p&gt;Browse this FAQ page to find answers to frequently asked questions that have not been covered elsewhere
in the documentation.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>基于HAL库的OLED驱动方法 (SPI)</title>
      <link>https://zvictorliu.github.io/techBlog/post/stm32l4-oled/</link>
      <pubDate>Thu, 04 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://zvictorliu.github.io/techBlog/post/stm32l4-oled/</guid>
      <description>&lt;p&gt;本文以STM32L496为例介绍如何在HAL库下驱动OLED&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>拓扑排序</title>
      <link>https://zvictorliu.github.io/techBlog/post/topological-sort/</link>
      <pubDate>Thu, 04 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://zvictorliu.github.io/techBlog/post/topological-sort/</guid>
      <description>&lt;p&gt;拓扑排序简单来说就是剥皮&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>最短路问题</title>
      <link>https://zvictorliu.github.io/techBlog/post/shortest-path/</link>
      <pubDate>Thu, 04 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://zvictorliu.github.io/techBlog/post/shortest-path/</guid>
      <description>&lt;p&gt;此处主要主要介绍两种算法&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>最小生成树</title>
      <link>https://zvictorliu.github.io/techBlog/post/minimum-spanning-tree/</link>
      <pubDate>Sun, 23 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://zvictorliu.github.io/techBlog/post/minimum-spanning-tree/</guid>
      <description>&lt;p&gt;此处主要记录最小生成树的个人理解，目标是为了个人复习，而不是为了讲清楚&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>基于NUCLEO-L496ZG开发</title>
      <link>https://zvictorliu.github.io/techBlog/post/nucleol496zg/</link>
      <pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://zvictorliu.github.io/techBlog/post/nucleol496zg/</guid>
      <description>&lt;p&gt;本文基于STM32CubeMX + Keil5 的开发，介绍该型号的配置和使用方法&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://zvictorliu.github.io/techBlog/about/</link>
      <pubDate>Tue, 25 Jan 2022 14:00:00 +0000</pubDate>
      
      <guid>https://zvictorliu.github.io/techBlog/about/</guid>
      <description>Our website builds with Hugo static site generator and Mainroad theme. This demo allows you to see what Mainroad based website looks like before deciding to go with it. Just keep in mind that the current demo shows the basics, a small part of what the combination of Hugo and Mainroad can do.
About Mainroad Mainroad is a responsive, simple, clean and content-focused Hugo theme based on the MH Magazine lite WordPress theme.</description>
    </item>
    
    <item>
      <title>Basic HTML Elements</title>
      <link>https://zvictorliu.github.io/techBlog/post/basic-elements/</link>
      <pubDate>Mon, 16 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zvictorliu.github.io/techBlog/post/basic-elements/</guid>
      <description>&lt;p&gt;The main purpose of this article is to make sure that all basic HTML Elements are decorated with CSS so as to not miss any possible elements when creating new themes for Hugo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://zvictorliu.github.io/techBlog/post/hugo-template-primer/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://zvictorliu.github.io/techBlog/post/hugo-template-primer/</guid>
      <description>&lt;p&gt;Hugo uses the excellent &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; &lt;a href=&#34;https://golang.org/pkg/html/template/&#34;&gt;html/template&lt;/a&gt; library for
its template engine. It is an extremely lightweight engine that provides a very
small amount of logic. In our experience that it is just the right amount of
logic to be able to create a good static website. If you have used other
template systems from different languages or frameworks you will find a lot of
similarities in Go templates.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://zvictorliu.github.io/techBlog/post/getting-started-with-hugo/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://zvictorliu.github.io/techBlog/post/getting-started-with-hugo/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Qt 开发上位机程序</title>
      <link>https://zvictorliu.github.io/techBlog/post/qt-creator-serialport/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zvictorliu.github.io/techBlog/post/qt-creator-serialport/</guid>
      <description>利用Qt creator 开发一个上位机程序，能够实现显示单片机返回的数据，增加展示效果，但可调式性必然没有以及成熟的好
基本认识 Qt 生成一个主窗口，然后会陷入事件循环，直至用户关闭程序才会执行main函数后面的代码
Qt 生成的窗口样式是和操作系统相关的，Qt 可以设置一些属性，但一些特别的属性依赖于系统主题，Qt 无法控制，所以改了也没有用
QMainWindow继承自QWidget，增加了菜单栏、状态栏之类的东西，比如经常有看到的“文件、工具”等待选项，这些并非是必要的
在ui界面上的东西，是属于ui这个对象的成员
自定义窗口 如果完全自定义则关闭、最大化、最小化这些都要自己配置了
实在太麻烦，还是就这样了吧，win11的也不算丑了</description>
    </item>
    
  </channel>
</rss>
